<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-8O19A79" failures="0" tests="1" name="case2" time="0.035" errors="0" timestamp="2022-12-08T18:10:47 ART">
  <testcase classname="base.BaseTests" name="@BeforeClass setUp" time="0.009">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\Zibe\Desktop\Swaglabs-TestNG\Swaglabs\resources\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\Zibe\Desktop\Swaglabs-TestNG\Swaglabs\resources\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:345)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:160)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:155)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:450)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:49)
at base.BaseTests.setUp(BaseTests.java:38)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setUp -->
  <testcase classname="base.BaseTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="base.BaseTests" name="@AfterMethod tearDown" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at base.BaseTests.tearDown(BaseTests.java:86)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="base.BaseTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="login.LoginTest_TestCase2" name="testSameDataInput" time="0.0">
    <skipped/>
  </testcase> <!-- testSameDataInput -->
</testsuite> <!-- case2 -->
